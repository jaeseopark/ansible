---
- name: Ensure the required packages are installed
  package:
    name: "{{ item }}"
    state: present
  loop:
    - certbot
    - ufw

- name: Ensure ufw is running
  service:
    name: ufw
    state: started

- name: Ensure port 80 is open
  ufw:
    rule: allow
    port: "80"

- name: Ensure nginx is stopped for certificate generation
  service:
    name: nginx
    state: stopped
  ignore_errors: true

- name: Reload UFW
  ufw:
    state: reloaded

- name: Generate certificates for each domain group
  shell: >
    certbot certonly
    -d {{ item.value | join(',') }}
    -m {{ letsencrypt_email }}
    --preferred-challenges http
    --standalone
    --expand
    --agree-tos
    --no-eff-email
  args:
    creates: "/etc/letsencrypt/live/{{ item.key }}/fullchain.pem"
  loop: "{{ cert_domain_groups | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

- name: Ensure the cert/key files exist for each domain
  file: 
    name: "/etc/letsencrypt/live/{{ item[0].key }}/{{ item[1] }}"
    state: file
  with_nested:
    - "{{ cert_domain_groups | dict2items }}"
    - ['fullchain.pem', 'privkey.pem']
  loop_control:
    label: "{{ item[0].key }}/{{ item[1] }}"

- name: Ensure certificate renewal cron job exists
  cron:
    name: renew certificate
    minute: "0"
    hour: "0"
    job: /usr/bin/certbot renew --quiet
