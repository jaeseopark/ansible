{% for app in apps %}
upstream {{ app.name }} {
    server {{ app.ip }}:{{ app.port }};
}
{% endfor %}

server {
    listen {{ jellyfin_port }};
    listen [::]:{{ jellyfin_port }};
    server_name {{ vpn_domain }} jellyfin.{{ vpn_domain }};

    location / {
        proxy_pass http://jellyfin$request_uri;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name *.{{ vpn_domain }};

    # Uncomment to redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

{% for app in apps %}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {{ app.name}}.{{ vpn_domain }};

    add_header Strict-Transport-Security "max-age=31536000" always;
    ssl_certificate /etc/letsencrypt/live/{{ vpn_domain }}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ vpn_domain }}/privkey.pem; # managed by Certbot
    ssl_trusted_certificate /etc/letsencrypt/live/{{ vpn_domain }}/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;

    proxy_pass_request_headers on;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    proxy_buffering off;

    location / {
        {% if 'additional_config' in app %}
        {{ app.additional_config }}
        {% endif %}
        proxy_pass http://{{ app.name }}$request_uri;
    }
}
{% endfor %}
