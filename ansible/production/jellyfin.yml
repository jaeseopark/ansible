---
- hosts: bigboi
  vars:
    app_path: /app/jellyfin
    media_path: /mnt/media
    jellyfin_mnt_path: /app/jellyfin/mnt
    trns_mnt_path: /app/jellyfin/trns-mnt
    trns_bkup_mnt_path: /app/jellyfin/trns-bkup-mnt
    trns_bkup_dl_path: /srv/dev-disk-by-uuid-5a0f2275-e689-459c-b6fb-cd14264bb915/crg/downloads
    docker_compose_path: /app/jellyfin/docker-compose.yml
    wg_conf_path: /app/jellyfin/wg0.conf
    wg_resolv_conf_path: /app/jellyfin/wg.resolv.conf
    port_forwarding_enabled: "false" # Mullvad stopped supporting it. keeping it disabled for now.
    wg_fwd_port: "58008"
    tz: America/Denver
    puid: "0"
    pgid: "27"
  tasks:
    - name: Ensure folders exists
      file:
        path: "{{ item }}"
        mode: u=rwx,g=rwx,o=rx
        state: directory
      loop:
        - "{{ app_path }}"
        - "{{ jellyfin_mnt_path }}"
        - "{{ trns_mnt_path }}"
        - "{{ trns_bkup_mnt_path }}"
    - name: Ensure docker images are latest
      community.docker.docker_image:
        name: "{{ item }}"
        tag: latest
        source: pull
        state: present
      loop:
      - lscr.io/linuxserver/jellyfin
      - ghcr.io/linuxserver/wireguard
      - ghcr.io/linuxserver/transmission
    - name: Copy compose file from the master node
      template:
        src: jellyfin.docker-compose.j2
        dest: "{{ docker_compose_path }}"
    - name: Ensure Docker Compose is not running
      community.docker.docker_compose:
        project_src: "{{ app_path }}"
        state: absent
    - name: Copy wg file from the master node
      template:
        src: jellyfin.wg.conf.secret.j2
        dest: "{{ wg_conf_path }}"
    - name: Insert PostUp PostDown clauses to the wg file
      ansible.builtin.lineinfile:
        path: "{{ wg_conf_path }}"
        insertafter: "^\\[Interface\\]$"
        line: |
          PostUp = DROUTE=$(ip route | grep default | awk '{print $3}'); HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route add $HOMENET3 via $DROUTE;ip route add $HOMENET2 via $DROUTE; ip route add $HOMENET via $DROUTE;iptables -I OUTPUT -d $HOMENET -j ACCEPT;iptables -A OUTPUT -d $HOMENET2 -j ACCEPT; iptables -A OUTPUT -d $HOMENET3 -j ACCEPT;  iptables -A OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT
          PreDown = HOMENET=192.168.0.0/16; HOMENET2=10.0.0.0/8; HOMENET3=172.16.0.0/12; ip route del $HOMENET3 via $DROUTE;ip route del $HOMENET2 via $DROUTE; ip route del $HOMENET via $DROUTE; iptables -D OUTPUT ! -o %i -m mark ! --mark $(wg show %i fwmark) -m addrtype ! --dst-type LOCAL -j REJECT; iptables -D OUTPUT -d $HOMENET -j ACCEPT; iptables -D OUTPUT -d $HOMENET2 -j ACCEPT; iptables -D OUTPUT -d $HOMENET3 -j ACCEPT
    - name: Copy resolvconf file for the wg container
      copy:
        src: jellyfin.wg.resolv.conf
        dest: "{{ wg_resolv_conf_path }}"
    - name: Copy trns settings file from the master node
      vars:
        rpcport: "{{ jellyfin_trns_port }}"
      template:
        src: jellyfin.trns-settings.j2
        dest: "{{ trns_mnt_path }}/settings.json"
    - name: Copy trns settings file from the master node (bkup)
      vars:
        rpcport: "{{ jellyfin_trns_bkup_port }}"
        wg_fwd_port: "12345" # Random value to disable forwarding
      template:
        src: jellyfin.trns-settings.j2
        dest: "{{ trns_bkup_mnt_path }}/settings.json"
    - name: Ensure Docker Compose is running
      community.docker.docker_compose:
        project_src: "{{ app_path }}"
        state: present
